diff -Nurd -x'*~' libidn-1.32.orig/java/src/main/java/gnu/inet/encoding/Makefile.am libidn-1.32/java/src/main/java/gnu/inet/encoding/Makefile.am
--- libidn-1.32.orig/java/src/main/java/gnu/inet/encoding/Makefile.am	2015-07-07 16:59:35.000000000 -0400
+++ libidn-1.32/java/src/main/java/gnu/inet/encoding/Makefile.am	2015-09-06 05:52:12.000000000 -0400
@@ -16,6 +16,7 @@
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
+AM_JAVACFLAGS = -target 1.6 -source 1.6
 JAVAROOT = $(top_builddir)/java/src/main/java
 
 if JAVA
From: Tim Rühsen <tim.ruehsen@gmx.de>
Date: Fri, 1 Sep 2017 08:04:48 +0000 (+0200)
Subject: lib/punycode.c (decode_digit): Fix integer overflow
X-Git-Url: http://git.savannah.gnu.org/gitweb/?p=libidn.git;a=commitdiff_plain;h=e9e81b8063b095b02cf104bb992fa9bf9515b9d8

lib/punycode.c (decode_digit): Fix integer overflow

This fix is a backport from libidn2 and addresses
CVE-2017-14062.
---

diff --git a/lib/punycode.c b/lib/punycode.c
index 86819a7..49250a1 100644
--- a/lib/punycode.c
+++ b/lib/punycode.c
@@ -88,10 +88,10 @@ enum
 /* point (for use in representing integers) in the range 0 to */
 /* base-1, or base if cp does not represent a value.          */
 
-static punycode_uint
-decode_digit (punycode_uint cp)
+static unsigned
+decode_digit (int cp)
 {
-  return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 :
+  return (unsigned) cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 :
     cp - 97 < 26 ? cp - 97 : base;
 }
 
