Info2: <<

Package: cran-progressr-r%type_pkg[rversion]
Type: rversion (3.6 3.5)
Version: 0.9.0
Revision: 1
Description: Inclusive, Unifying API for Progress Updates
Homepage: https://cran.r-project.org/package=progressr
License: GPL
Maintainer: None <fink-devel@lists.sourceforge.net>
Source: mirror:custom:progressr_%v.tar.gz
Source-Checksum: SHA256(cfe70f8423041ea5b5a2a39122c166462e58b1bba84df935858a7b86362b530f)
SourceDirectory: progressr
CustomMirror: <<
	Primary: https://cran.r-project.org/src/contrib
	Secondary: https://cran.r-project.org/src/contrib/00Archive/progressr
<<
Depends: <<
	r-base%type_pkg[rversion],
	cran-digest-r%type_pkg[rversion]
<<
BuildDepends: r-base%type_pkg[rversion]-dev
CompileScript: <<
  #!/bin/bash -ev
  export TMPDIR=%b/tmp
  BIN_R=%p/Library/Frameworks/R.framework/Versions/%type_raw[rversion]/Resources/bin/R
  
  pushd ..
  $BIN_R --verbose CMD build --no-build-vignettes progressr
<<
InstallScript: <<
  #!/bin/sh -ev
  BIN_R=%p/Library/Frameworks/R.framework/Versions/%type_raw[rversion]/Resources/bin/R
  
  mkdir -p %i/lib/R/%type_raw[rversion]/site-library
  pushd %b/.. && $BIN_R --verbose CMD INSTALL --library=%i/lib/R/%type_raw[rversion]/site-library progressr
<<
DescDetail: <<
A minimal, unifying API for scripts and packages to report progress
updates from anywhere including when using parallel processing. The
package is designed such that the developer can to focus on what
progress should be reported on without having to worry about how to
present it. The end user has full control of how, where, and when to
render these progress updates, e.g. in the terminal using
utils::txtProgressBar() or progress::progress_bar(), in a graphical user
interface using utils::winProgressBar(), tcltk::tkProgressBar() or
shiny::withProgress(), via the speakers using beep::beepr(), or on a
file system via the size of a file. Anyone can add additional,
customized, progression handlers. The 'progressr' package uses R's
condition framework for signaling progress updated. Because of this,
progress can be reported from almost anywhere in R, e.g. from classical
for and while loops, from map-reduce API:s like the lapply() family of
functions, 'purrr', 'plyr', and 'foreach'. It will also work with
parallel processing via the 'future' framework, e.g.
future.apply::future_lapply(), furrr::future_map(), and 'foreach' with
'doFuture'. The package is compatible with Shiny applications.
<<
DescPackaging: <<
  R (>= 3.0), but R restricted by cran-progressr
<<

<<
