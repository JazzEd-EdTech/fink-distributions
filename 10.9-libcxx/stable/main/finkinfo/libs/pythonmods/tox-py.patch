diff --git a/tox.ini b/tox.ini
--- a/tox.ini	2018-02-22 12:08:28.000000000 +0100
+++ b/tox.ini	2018-05-16 22:15:56.000000000 +0200
@@ -21,36 +21,37 @@
 passenv = http_proxy https_proxy no_proxy SSL_CERT_FILE PYTEST_ADDOPTS
 deps =
 extras = testing
-commands = pytest {posargs:\
+commands = FINK_BINDIR/pytest-PY_RAW {posargs:\
            --cov="{envsitepackagesdir}/tox" \
            --cov-config="{toxinidir}/tox.ini"  \
            --timeout=180 \
            -n={env:PYTEST_XDIST_PROC_NR:auto} \
            --junitxml={env:JUNIT_XML_FILE:{toxworkdir}/.test.{envname}.xml} \
            . }
+whitelist_externals: pytest-PY_RAW
 
 [testenv:docs]
 description = invoke sphinx-build to build the HTML docs
-basepython = python3.7
+basepython = pythonPY_RAW
 extras = docs
-commands = sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
-           python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'
+commands = FINK_BINDIR/sphinx-buildPY_RAW -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
+           FINK_BINDIR/pythonPY_RAW -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'
 
 [testenv:package_description]
 description = check that the long description is valid
-basepython = python3.7
+basepython = FINK_BINDIR/pythonPY_RAW
 deps = twine >= 1.12.1
        # TODO installing readme-renderer[md] should not be necessary
        readme-renderer[md] >= 24.0
        pip >= 18.0.0
 skip_install = true
 extras =
-commands = pip wheel -w {envtmpdir}/build --no-deps .
+commands = FINK_BINDIR/pipPY_RAW wheel -w {envtmpdir}/build --no-deps .
            twine check {envtmpdir}/build/*
 
 [testenv:fix_lint]
 description = format the code base to adhere to our styles, and complain about what we cannot do automatically
-basepython = python3.7
+basepython = FINK_BINDIR/pythonPY_RAW
 passenv = {[testenv]passenv}
           HOMEPATH
           # without PROGRAMDATA cloning using git for Windows will fail with an
@@ -60,7 +61,7 @@
 deps = pre-commit == 1.10.3
 skip_install = True
 commands = pre-commit run --all-files --show-diff-on-failure
-           python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'
+           FINK_BINDIR/pythonPY_RAW -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'
 
 
 [testenv:coverage]
@@ -73,12 +74,12 @@
 passenv = {[testenv]passenv}
           DIFF_AGAINST
 setenv = COVERAGE_FILE={toxworkdir}/.coverage
-commands = coverage erase
-           coverage combine
-           coverage report -m
-           coverage xml -o {toxworkdir}/coverage.xml
-           coverage html -d {toxworkdir}/htmlcov
-           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
+commands = FINK_BINDIR/coveragePY_RAW erase
+           FINK_BINDIR/coveragePY_RAW combine
+           FINK_BINDIR/coveragePY_RAW report -m
+           FINK_BINDIR/coveragePY_RAW xml -o {toxworkdir}/coverage.xml
+           FINK_BINDIR/coveragePY_RAW html -d {toxworkdir}/htmlcov
+           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/FINK_BINDIR/coveragePY_RAW.xml
 depends = py27, py34, py35, py36, py37, pypy, pypy3
 parallel_show_output = True
 
@@ -89,15 +90,15 @@
 setenv = COVERAGE_FILE={toxworkdir}/.coverage
 deps = coveralls[yaml]>= 1.5.1, <2
 skip_install = True
-commands = coveralls --rcfile=tox.ini -v
+commands = FINK_BINDIR/coverallsPY_RAW --rcfile=tox.ini -v
 
 [testenv:exit_code]
 # to see how the InvocationError is displayed, use
 # PYTHONPATH=.:$PYTHONPATH python3 -m tox -e exit_code
-basepython = python3.7
+basepython = FINK_BINDIR/pythonPY_RAW
 description = commands with several exit codes
 skip_install = True
-commands = python3.7 -c "import sys; sys.exit(139)"
+commands = FINK_BINDIR/pythonPY_RAW -c "import sys; sys.exit(139)"
 
 [testenv:X]
 description = print the positional arguments passed in with echo
@@ -150,23 +151,23 @@
 
 [testenv:release]
 description = do a release, required posarg of the version number
-basepython = python3.7
+basepython = FINK_BINDIR/pythonPY_RAW
 passenv = *
 deps = gitpython >= 2.1.10
        towncrier >= 18.5.0
        packaging  >= 17.1
-commands = python {toxinidir}/tasks/release.py --version {posargs}
+commands = FINK_BINDIR/pythonPY_RAW {toxinidir}/tasks/release.py --version {posargs}
 
 [testenv:notify]
 description = notify people about the release of the library
-basepython = python3.7
+basepython = FINK_BINDIR/pythonPY_RAW
 skip_install = true
 passenv = *
 deps = gitpython >= 2.1.10
        packaging  >= 17.1
        google-api-python-client >= 1.7.3
        oauth2client >= 4.1.2
-commands = python {toxinidir}/tasks/notify.py
+commands = FINK_BINDIR/pythonPY_RAW {toxinidir}/tasks/notify.py
 
 [testenv:dev]
 description = dev environment with all deps at {envdir}
@@ -176,4 +177,4 @@
        {[testenv:notify]deps}
 usedevelop = True
-commands = python -m pip list --format=columns
-           python -c "print('{envpython}')"
+commands = FINK_BINDIR/pythonPY_RAW -m pip list --format=columns
+           FINK_BINDIR/pythonPY_RAW -c "print('{envpython}')"
diff -Naur a/tests/unit/test_config.py b/tests/unit/test_config.py
--- a/tests/unit/config/test_config.py	2018-10-09 12:10:01.000000000 +0200
+++ b/tests/unit/config/test_config.py	2019-01-06 19:50:42.195315677 +0100
@@ -988,7 +988,7 @@
         config = newconfig(
             """
             [testenv]
-            basepython=python
+            basepython=FINK_BINDIR/pythonPY_RAW
         """
         )
         assert len(config.envconfigs) == 1
@@ -1874,14 +1874,14 @@
             config = newconfig(
                 """
                 [testenv]
-                basepython=python3
+                basepython=FINK_BINDIR/pythonPY_RAW
                 [testenv:py27]
-                commands = python --version
+                commands = FINK_BINDIR/pythonPY_RAW --version
             """
             )
         assert len(config.envconfigs) == 1
         envconfig = config.envconfigs["py27"]
-        assert envconfig.basepython == "python3"
+        assert envconfig.basepython == "FINK_BINDIR/pythonPY_RAW"
 
     def test_default_factors_conflict_lying_name(
         self, newconfig, capsys, tmpdir, recwarn, monkeypatch
@@ -1915,9 +1915,9 @@
                 [tox]
                 ignore_basepython_conflict=True
                 [testenv]
-                basepython=python3
+                basepython=FINK_BINDIR/pythonPY_RAW
                 [testenv:py27]
-                commands = python --version
+                commands = FINK_BINDIR/pythonPY_RAW --version
             """
             )
         assert len(config.envconfigs) == 1
diff --git a/tests/test_z_cmdline.py b/tests/test_z_cmdline.py
--- a/tests/unit/test_z_cmdline.py	2018-03-24 11:05:06.000000000 +0100
+++ b/tests/unit/test_z_cmdline.py	2018-05-16 22:07:44.000000000 +0200
@@ -427,9 +427,9 @@
             "tox.ini": """
             [testenv]
             changedir=tests
-            commands= pytest --basetemp={envtmpdir} \
+            commands= FINK_BINDIR/pytest-PY_RAW --basetemp={envtmpdir} \
                               --junitxml=junit-{envname}.xml
-            deps=pytest
+            sitepackages=True
         """,
         },
     )
@@ -548,9 +548,8 @@
             usedevelop=True
             changedir=tests
             commands=
-                pytest --basetemp={envtmpdir} --junitxml=junit-{envname}.xml []
-            deps=pytest"""
-            + """
+                FINK_BINDIR/pytest-PY_RAW --basetemp={envtmpdir} --junitxml=junit-{envname}.xml []
+            sitepackages=True
             skipsdist={}
         """.format(
                 skipsdist
@@ -891,15 +890,17 @@
     )
 
 
+@pytest.mark.skipif(os.environ.get('DEB_SKIP_TOX_TESTS'), reason='Use DEP-8')
 def test_tox_console_script(initproj):
     initproj("help", filedefs={"tox.ini": ""})
-    result = subprocess.check_call(["tox", "--help"])
+    result = subprocess.check_call(["FINK_BINDIR/tox-pyPY_PKG", "--help"])
     assert result == 0
 
 
+@pytest.mark.skipif(os.environ.get('DEB_SKIP_TOX_TESTS'), reason='Use DEP-8')
 def test_tox_quickstart_script(initproj):
     initproj("help", filedefs={"tox.ini": ""})
-    result = subprocess.check_call(["tox-quickstart", "--help"])
+    result = subprocess.check_call(["FINK_BINDIR/tox-quickstart-pyPY_PKG", "--help"])
     assert result == 0
 
 
