# -*- coding: ascii; tab-width: 4; x-counterpart: tox-py.patch -*-
Info4: <<

Package: tox-py%type_pkg[python]
Version: 3.7.0
Revision: 1
Maintainer: Kurt Schwehr <goatbar@users.sourceforge.net>
License: BSD
Type: python (2.7 3.4 3.5 3.6 3.7)
Homepage: https://pypi.org/project/tox/
Source: https://files.pythonhosted.org/packages/source/t/tox/tox-%v.tar.gz
Source-MD5: a759c0bc964c2f3002d5a39212be6886
PatchFile: %{ni}.patch
PatchFile-MD5: d5c35dca76b54a9a2f73d726a2eecc48

Depends: <<
	python%type_pkg[python]-shlibs,
	filelock-py%type_pkg[python],
	pluggy-py%type_pkg[python],
	py-py%type_pkg[python],
	six-py%type_pkg[python],
	virtualenv-py%type_pkg[python]
<<
BuildDepends: python%type_pkg[python], setuptools-tng-py%type_pkg[python]
Suggests: pytest-py%type_pkg[python]

Description: Testing in virtualenvs

DescDetail: <<
Tox is a generic virtualenv management and test command line tool for:

- checking the package installs correctly with different Python
  versions and interpreters
- running tests in each of the environments, configuring your test
  tool of choice
- acting as a frontend to Continuous Integration servers, greatly
  reducing boilerplate and merging CI and shell-based testing.

tox aims to automate and standardize testing in Python. It is part of a larger
vision of easing the packaging, testing and release process of Python software.
<<

DocFiles: CODE_OF_CONDUCT.md CONTRIBUTING.rst CONTRIBUTORS docs HOWTORELEASE.rst LICENSE PKG-INFO README.md

# Tests should not be run against the installed version and are not included in the package after installation,
# but at least make sure they are running the correct script variants.
PatchScript: <<
    sed 's|PY_PKG|%type_pkg[python]|g;s|PY_RAW|%type_raw[python]|g;s|FINK_BINDIR|%p/bin|g;' %{PatchFile} | patch -p1
<<

CompileScript: <<
    %p/bin/python%type_raw[python] setup.py build
<<

InfoTest: <<
    TestDepends: <<
        atomicwrites-py%type_pkg[python],
        coverage-py%type_pkg[python],
        freezegun-py%type_pkg[python],
        pathlib2-py%type_pkg[python],
        pip-py%type_pkg[python],
        pytest-mock-py%type_pkg[python],
        scandir-py%type_pkg[python],
        toml-py%type_pkg[python]
    <<
    TestScript: <<
        #!/bin/bash -ev
        # Create tox/tox-quickstart scripts locally and add pkg_resources info
        mkdir -p build/bin
        python%type_raw[python] setup.py install_scripts -d build/bin
        python%type_raw[python] setup.py egg_info
        mv build/bin/tox build/bin/tox-py%type_pkg[python]
        mv build/bin/tox-quickstart build/bin/tox-quickstart-py%type_pkg[python]
        chmod -R go+rX build tox*
        PATH=%b/build/bin:$PATH
        export PYTHONPATH=%b/build/lib
        # fix non-ASCII characters in docs/changelog.rst and docs/example/basic.rst
        export LANG=en_US.UTF-8
        # Locally installed scripts run correctly if tested separately, but when testing
        # all at once, fail with a DistributionNotFound - go figure...
        # Set DEB_SKIP_TOX_TESTS to disable them entirely [marked `skipif()`]
        %p/bin/pytest-%type_raw[python] tests -k '_script' || exit 2
        # skip test in tests/unit/test_z_cmdline.py with "and not test_test_usedevelop"
        %p/bin/pytest-%type_raw[python] tests -k 'not _script and not test_test_usedevelop' || exit 2
    <<
    TestSuiteSize: medium
<<

InstallScript: <<
    #!/bin/bash -ev
    find build/lib -name '*.pyc' -exec rm {} \;
    python%type_raw[python] setup.py install --root=%d
    mv %i/bin/tox %i/bin/tox-py%type_pkg[python]
    mv %i/bin/tox-quickstart %i/bin/tox-quickstart-py%type_pkg[python]
<<

PostInstScript: <<
    update-alternatives --verbose --install %p/bin/tox tox-py %p/bin/tox-py%type_pkg[python] %type_pkg[python] --slave %p/bin/tox-quickstart tox-quickstart %p/bin/tox-quickstart-py%type_pkg[python]
    echo ''
    echo 'If you have just built and installed the tox dependencies'
    echo 'coverage-py%type_pkg[python], hypothesis-py%type_pkg[python], pytest-py%type_pkg[python], pytest-mock-py%type_pkg[python]'
    echo 'for the first time, they will have been built with their tests disabled.'
    echo 'You may now test their builds using the `fink -m rebuild` command.'
<<

PreRmScript: <<
    if [ $1 != "upgrade" ]; then
        update-alternatives --verbose --remove tox-py %p/bin/tox-py%type_pkg[python]
    fi
<<

# Info4
<<
