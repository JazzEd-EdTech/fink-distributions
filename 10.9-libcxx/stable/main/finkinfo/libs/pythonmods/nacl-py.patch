From 3479eaed36a32c6bd91331573a450a5bf099bdd5 Mon Sep 17 00:00:00 2001
From: Alex Gaynor <alex.gaynor@gmail.com>
Date: Mon, 1 Jul 2019 00:11:38 -0400
Subject: [PATCH] Fixed tests for change in pytest repr (#546)

* Fixed tests for change in pytest repr

* Fixed tests for change in pytest repr

* Fixed tests for change in pytest repr

* Fixed tests for change in pytest repr
---
 tests/test_box.py        | 2 +-
 tests/test_sealed_box.py | 2 +-
 tests/test_secret.py     | 2 +-
 tests/test_signing.py    | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/tests/test_box.py b/tests/test_box.py
index d547ac27..46f3b793 100644
--- a/tests/test_box.py
+++ b/tests/test_box.py
@@ -268,7 +268,7 @@ def test_box_wrong_length():
 def check_type_error(expected, f, *args):
     with pytest.raises(TypeError) as e:
         f(*args)
-    assert expected in str(e)
+    assert expected in str(e.value)
 
 
 def test_wrong_types():
diff --git a/tests/test_sealed_box.py b/tests/test_sealed_box.py
index f7ba15c3..49ea2324 100644
--- a/tests/test_sealed_box.py
+++ b/tests/test_sealed_box.py
@@ -110,7 +110,7 @@ def test_sealed_box_decryption(privalice, pubalice, plaintext, encrypted):
 def check_type_error(expected, f, *args):
     with pytest.raises(TypeError) as e:
         f(*args)
-    assert expected in str(e)
+    assert expected in str(e.value)
 
 
 def test_wrong_types():
diff --git a/tests/test_secret.py b/tests/test_secret.py
index 3b52459a..73987fcb 100644
--- a/tests/test_secret.py
+++ b/tests/test_secret.py
@@ -142,7 +142,7 @@ def test_secret_box_wrong_lengths():
 def check_type_error(expected, f, *args):
     with pytest.raises(TypeError) as e:
         f(*args)
-    assert expected in str(e)
+    assert expected in str(e.value)
 
 
 def test_wrong_types():
diff --git a/tests/test_signing.py b/tests/test_signing.py
index 4304afb9..3e2cf359 100644
--- a/tests/test_signing.py
+++ b/tests/test_signing.py
@@ -219,7 +219,7 @@ def test_key_conversion(self):
 def check_type_error(expected, f, *args):
     with pytest.raises(TypeError) as e:
         f(*args)
-    assert expected in str(e)
+    assert expected in str(e.value)
 
 
 def test_wrong_types():
From 24da8317ae9182f8b14944733b886cff4727926a Mon Sep 17 00:00:00 2001
From: Scott Kitterman <sklist@kitterman.com>
Date: Tue, 20 Mar 2018 21:49:17 -0400
Subject: [PATCH] Set hypothesis timeout to unlimited in test_pwhash.py to
 no-op this deprecated constraint and fix incorrect test failures on slow
 processor architectures. (#411)

---
 tests/test_pwhash.py | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/tests/test_pwhash.py b/tests/test_pwhash.py
index 9634c85b..16363e4a 100644
--- a/tests/test_pwhash.py
+++ b/tests/test_pwhash.py
@@ -20,7 +20,7 @@
 import sys
 import unicodedata as ud
 
-from hypothesis import given, settings
+from hypothesis import given, settings, unlimited
 from hypothesis.strategies import integers, text
 
 import pytest
@@ -411,7 +411,7 @@ def test_str_verify_argon2_ref_fail(password_hash, password):
        integers(min_value=1024 * 1024,
                 max_value=16 * 1024 * 1024)
        )
-@settings(deadline=1500, max_examples=20)
+@settings(deadline=1500, max_examples=20, timeout=unlimited)
 def test_argon2i_str_and_verify(password, ops, mem):
     _psw = password.encode('utf-8')
     pw_hash = nacl.pwhash.argon2i.str(_psw, opslimit=ops, memlimit=mem)
@@ -425,7 +425,7 @@ def test_argon2i_str_and_verify(password, ops, mem):
        integers(min_value=1024 * 1024,
                 max_value=16 * 1024 * 1024)
        )
-@settings(deadline=1500, max_examples=20)
+@settings(deadline=1500, max_examples=20, timeout=unlimited)
 def test_argon2id_str_and_verify(password, ops, mem):
     _psw = password.encode('utf-8')
     pw_hash = nacl.pwhash.argon2id.str(_psw, opslimit=ops, memlimit=mem)
@@ -439,7 +439,7 @@ def test_argon2id_str_and_verify(password, ops, mem):
        integers(min_value=1024 * 1024,
                 max_value=16 * 1024 * 1024)
        )
-@settings(deadline=1500, max_examples=20)
+@settings(deadline=1500, max_examples=20, timeout=unlimited)
 def test_argon2i_str_and_verify_fail(password, ops, mem):
     _psw = password.encode('utf-8')
     pw_hash = nacl.pwhash.argon2i.str(_psw, opslimit=ops, memlimit=mem)
@@ -448,7 +448,7 @@ def test_argon2i_str_and_verify_fail(password, ops, mem):
 
 
 @given(text(alphabet=PASSWD_CHARS, min_size=5, max_size=20))
-@settings(deadline=1500, max_examples=5)
+@settings(deadline=1500, max_examples=5, timeout=unlimited)
 def test_pwhash_str_and_verify(password):
     _psw = password.encode('utf-8')
 
From f6a41fbd0029097df9f7e023a3b18d6282396905 Mon Sep 17 00:00:00 2001
From: Scott Kitterman <sklist@kitterman.com>
Date: Thu, 5 Apr 2018 01:44:46 -0400
Subject: [PATCH] Allow tests/test_pwhash.py deadlines to be adjusted (#416)

* Use a new environment variable, PYNACL_HYPOTHESIS_DEADLINE, to override the normal test deadline for slow archs

* Add CHANGELOG.rst entry

* Update CHANGELOG.rst

Match revised change.

* Update test_pwhash.py

Set deadline to None instead of creating an environment variable, as discussed in the PR review.
---
 CHANGELOG.rst        | 3 +++
 tests/test_pwhash.py | 9 ++++-----
 2 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/tests/test_pwhash.py b/tests/test_pwhash.py
index 16363e4a..6697aa47 100644
--- a/tests/test_pwhash.py
+++ b/tests/test_pwhash.py
@@ -32,7 +32,6 @@
 import nacl.exceptions as exc
 import nacl.pwhash
 
-
 _all_unicode = u''.join(unichr(i) for i in range(sys.maxunicode))
 PASSWD_CHARS = u''.join(c for c in _all_unicode
                         if (ud.category(c).startswith('L') or
@@ -411,7 +410,7 @@ def test_str_verify_argon2_ref_fail(password_hash, password):
        integers(min_value=1024 * 1024,
                 max_value=16 * 1024 * 1024)
        )
-@settings(deadline=1500, max_examples=20, timeout=unlimited)
+@settings(deadline=None, max_examples=20, timeout=unlimited)
 def test_argon2i_str_and_verify(password, ops, mem):
     _psw = password.encode('utf-8')
     pw_hash = nacl.pwhash.argon2i.str(_psw, opslimit=ops, memlimit=mem)
@@ -425,7 +424,7 @@ def test_argon2i_str_and_verify(password, ops, mem):
        integers(min_value=1024 * 1024,
                 max_value=16 * 1024 * 1024)
        )
-@settings(deadline=1500, max_examples=20, timeout=unlimited)
+@settings(deadline=None, max_examples=20, timeout=unlimited)
 def test_argon2id_str_and_verify(password, ops, mem):
     _psw = password.encode('utf-8')
     pw_hash = nacl.pwhash.argon2id.str(_psw, opslimit=ops, memlimit=mem)
@@ -439,7 +438,7 @@ def test_argon2id_str_and_verify(password, ops, mem):
        integers(min_value=1024 * 1024,
                 max_value=16 * 1024 * 1024)
        )
-@settings(deadline=1500, max_examples=20, timeout=unlimited)
+@settings(deadline=None, max_examples=20, timeout=unlimited)
 def test_argon2i_str_and_verify_fail(password, ops, mem):
     _psw = password.encode('utf-8')
     pw_hash = nacl.pwhash.argon2i.str(_psw, opslimit=ops, memlimit=mem)
@@ -448,7 +447,7 @@ def test_argon2i_str_and_verify_fail(password, ops, mem):
 
 
 @given(text(alphabet=PASSWD_CHARS, min_size=5, max_size=20))
-@settings(deadline=1500, max_examples=5, timeout=unlimited)
+@settings(deadline=None, max_examples=5, timeout=unlimited)
 def test_pwhash_str_and_verify(password):
     _psw = password.encode('utf-8')
 
