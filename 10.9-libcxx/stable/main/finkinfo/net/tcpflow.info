Package: tcpflow
Version: 1.4.4
Revision: 4
Description: Captures data transmitted in TCP connections
License: GPL/OpenSSL
BuildDepends: <<
	boost1.58-nopython,
	bzip2-dev,
	cairo (>= 1.12.14-1),
	expat1,
	fink (>= 0.32),
	fink-package-precedence,
	fontconfig2-dev (>= 2.10.0-1),
	freetype219 (>= 2.6-1),
	libpcap1,
	openssl110-dev,
	pixman (>= 0.32.2-1),
	sqlite3-dev
<<
Depends: <<
	bzip2-shlibs,
	cairo-shlibs (>= 1.12.14-1),
	expat1-shlibs,
	fontconfig2-shlibs (>= 2.10.0-1),
	freetype219-shlibs (>= 2.6-1),
	libpcap1-shlibs,
	openssl110-shlibs,
	pixman-shlibs (>= 0.32.2-1),
	sqlite3-shlibs
<<
Source: http://www.digitalcorpora.org/downloads/tcpflow/%n-%v.tar.gz
Source-MD5: f395fea6f5fe136543f4c982beff9cba
# dmacks migrated to openssl110...
# Debian version of upstream patch:
#  https://sources.debian.org/src/tcpflow/1.4.5+repack1-4/debian/patches/update-dfxml-for-openssl-1.1.patch
# and fix to configure comparable to their configure.ac:
# https://sources.debian.org/src/tcpflow/1.4.5+repack1-4/debian/patches/update-configure-for-openssl-1.1.patch
# but hardcoded for openssl110 since that's what we use.
PatchFile: %n.patch
PatchFile-MD5: a9a1ddc47b978021e2be24563e77e003
PatchScript: <<
	%{default_script}
	perl -pi -e 's/SSL_library_init/OPENSSL_init_ssl/g' configure
<<
GCC: 4.0
SetCPPFLAGS: -I%p/opt/boost-1_58/include
CompileScript: <<
	%{default_script}
	fink-package-precedence .
<<
InfoTest: <<
	TestScript: make check || exit 2
<<
InstallScript: make install DESTDIR=%d
Homepage: http://github.com/simsong/tcpflow/wiki
Maintainer: Nick Siripipat <nsiripip+fink@gmail.com>
DescDetail: <<
tcpflow is a program that captures data transmitted as part of TCP
connections (flows), and stores the data in a way that is convenient for
protocol analysis or debugging. A program like 'tcpdump' shows a summary of
packets seen on the wire, but usually doesn't store the data that's actually
being transmitted. In contrast, tcpflow reconstructs the actual data streams
and stores each flow in a separate file for later analysis. 

tcpflow understands sequence numbers and will correctly reconstruct data
streams regardless of retransmissions or out-of-order delivery. However,
it currently does not understand IP fragments; flows containing IP fragments
will not be recorded properly. 
<<
DocFiles: README AUTHORS COPYING NEWS
