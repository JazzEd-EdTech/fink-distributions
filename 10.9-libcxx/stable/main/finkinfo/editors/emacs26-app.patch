diff -Naur emacs-26.3.orig/configure emacs-26.3/configure
--- emacs-26.3.orig/configure	2019-08-22 07:43:48.000000000 +0900
+++ emacs-26.3/configure	2020-05-06 01:35:58.000000000 +0900
@@ -10687,7 +10687,7 @@
      INSTALL_ARCH_INDEP_EXTRA=
   fi
 
-  NS_OBJC_OBJ="nsterm.o nsfns.o nsmenu.o nsselect.o nsimage.o $ns_fontfile"
+  NS_OBJC_OBJ="nsterm.o nsfns.o nsmenu.o nsselect.o nsimage.o macim.o $ns_fontfile"
 fi
 CFLAGS="$tmp_CFLAGS"
 CPPFLAGS="$tmp_CPPFLAGS"
@@ -16568,7 +16568,7 @@
 
     CPPFLAGS="$SAVE_CPPFLAGS"
     if test "${HAVE_LIBXML2}" = "yes"; then
-      LIBXML2_CFLAGS="-I'$xcsdkdir/usr/include/libxml2'"
+      LIBXML2_CFLAGS="-I'${includedir}/libxml2'"
       LIBXML2_LIBS="-lxml2"
     fi
   fi
@@ -31342,7 +31342,7 @@
    ## only costs about 1.5K of wasted binary space.
    headerpad_extra=1000
    if test "$HAVE_NS" = "yes"; then
-     libs_nsgui="-framework AppKit"
+     libs_nsgui="-framework AppKit -framework Carbon -framework Cocoa"
      if test "$NS_IMPL_COCOA" = "yes"; then
         libs_nsgui="$libs_nsgui -framework IOKit"
      fi
diff -Naur emacs-26.3.orig/nextstep/templates/Info.plist.in emacs-26.3/nextstep/templates/Info.plist.in
--- emacs-26.3.orig/nextstep/templates/Info.plist.in	2019-01-07 23:26:07.000000000 +0900
+++ emacs-26.3/nextstep/templates/Info.plist.in	2020-05-05 15:49:41.000000000 +0900
@@ -677,5 +677,13 @@
 	<string>YES</string>
         <key>NSAppleEventsUsageDescription</key>
         <string>Emacs requires permission to send AppleEvents to other applications.</string>
+        <key>NSDesktopFolderUsageDescription</key>
+        <string>Emacs requires permission to access the Desktop folder.</string>
+        <key>NSDocumentsFolderUsageDescription</key>
+        <string>Emacs requires permission to access the Documents folder.</string>
+        <key>NSDownloadsFolderUsageDescription</key>
+        <string>Emacs requires permission to access the Downloads folder.</string>
+        <key>NSRemovableVolumesUsageDescription</key>
+        <string>Emacs requires permission to access files on Removable Volumes.</string>
 </dict>
 </plist>
diff -Naur emacs-26.3.orig/src/macfont.m emacs-26.3/src/macfont.m
--- emacs-26.3.orig/src/macfont.m	2019-07-26 04:41:28.000000000 +0900
+++ emacs-26.3/src/macfont.m	2020-05-05 15:49:41.000000000 +0900
@@ -2346,9 +2346,9 @@
                   != (spacing >= FONT_SPACING_MONO)))
             continue;
 
-          /* Don't use a color bitmap font until it is supported on
-	     free platforms.  */
-          if (sym_traits & kCTFontTraitColorGlyphs)
+          /* Don't use a color bitmap font unless its family is
+             explicitly specified.  */
+          if ((sym_traits & kCTFontTraitColorGlyphs) && NILP (family))
             continue;
 
           if (j > 0
diff -Naur emacs-26.3.orig/src/unexmacosx.c emacs-26.3/src/unexmacosx.c
--- emacs-26.3.orig/src/unexmacosx.c	2019-01-07 23:26:07.000000000 +0900
+++ emacs-26.3/src/unexmacosx.c	2020-05-05 15:49:41.000000000 +0900
@@ -503,22 +503,34 @@
 static void
 unexec_regions_merge (void)
 {
-  int i, n;
-  unexec_region_info r;
-  vm_size_t padsize;
-
   qsort (unexec_regions, num_unexec_regions, sizeof (unexec_regions[0]),
 	 &unexec_regions_sort_compare);
-  n = 0;
-  r = unexec_regions[0];
-  padsize = r.range.address & (pagesize - 1);
-  if (padsize)
-    {
-      r.range.address -= padsize;
-      r.range.size += padsize;
-      r.filesize += padsize;
+
+  /* Align each region start address to a page boundary.  */
+  for (unexec_region_info *cur = unexec_regions;
+       cur < unexec_regions + num_unexec_regions; cur++)
+    {
+      vm_size_t padsize = cur->range.address & (pagesize - 1);
+      if (padsize)
+	{
+	  cur->range.address -= padsize;
+	  cur->range.size += padsize;
+	  cur->filesize += padsize;
+
+	  unexec_region_info *prev = cur == unexec_regions ? NULL : cur - 1;
+	  if (prev
+	      && prev->range.address + prev->range.size > cur->range.address)
+	    {
+	      prev->range.size = cur->range.address - prev->range.address;
+	      if (prev->filesize > prev->range.size)
+		prev->filesize = prev->range.size;
+	    }
+	}
     }
-  for (i = 1; i < num_unexec_regions; i++)
+
+  int n = 0;
+  unexec_region_info r = unexec_regions[0];
+  for (int i = 1; i < num_unexec_regions; i++)
     {
       if (r.range.address + r.range.size == unexec_regions[i].range.address
 	  && r.range.size - r.filesize < 2 * pagesize)
@@ -530,17 +542,6 @@
 	{
 	  unexec_regions[n++] = r;
 	  r = unexec_regions[i];
-	  padsize = r.range.address & (pagesize - 1);
-	  if (padsize)
-	    {
-	      if ((unexec_regions[n-1].range.address
-		   + unexec_regions[n-1].range.size) == r.range.address)
-		unexec_regions[n-1].range.size -= padsize;
-
-	      r.range.address -= padsize;
-	      r.range.size += padsize;
-	      r.filesize += padsize;
-	    }
 	}
     }
   unexec_regions[n++] = r;
